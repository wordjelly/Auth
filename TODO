1.when sign_in fails, typing in the email field, causes credential_check to be performed.
2.Add a loading indicator to the calendar while the images are loading
3.Add a navigation element, like small circles side by side, to indicate when were the last months were the user was active, and this needs to be stored in a correct way, and showed
4.show a message saying that he has or hasnt been active this month.
5.on clicking enter on sign up form, it submits the sign in form.
6.sometimes the sign in modal just doesnt open

10.shift the email_required? to the user_concern
11.the css label in the login form for login => which says "email or mobile" , will have to be customizable from the user side.

14.on selecting autocomplete from drop-down , validation does not occur.
15.shift devise mailer to sidekiq
16.additional param name e.g mobile should be visible in all forms.
17.if they sign up with oauth, how to handle mobile number verification.

20.show counter while waiting for otp to be seeen.


23.the fields do not match thing gets triggered in the sign in form, if after registering a new user, we go back to the sign in form.

24.variabilize the js_erb partials for the whole otp_controller.

27.add recaptcha to update form.

29.user signed in by oauth, goes to forgot password, then what happens?
30.unconfirmed account -> goes to forgot password.
31. email confirmation being sent with mobile sign up.

34. sign out authenticity error

35. resend otp when account already confirmed.

36. after it shows message saying you need to confirm email, it wipes out the email and also does not show pending email. need to work on this. ? maybe call reload?

37. rate limit.

38. abstract otp_controller into a concern

39. sidekiq is down error?

42. permitted params have to be hard coded somewhere in the devise_concern, to allow the app_id and the api_key.

43.a payment object should have a transaction id, and an optional cart_item_id.
44.on the amount should be calculated live, by getting the prices of all the cart_items or only the one in the payment object.
45.to integrate this with salaries and payments.
46.a salary can be a product, with an id and a price.
47.suppose payment object can accept optional money paid to, there should also be acknowledgement.
48.product should get a vendor_id, which has to be a registered user.
49.user can just use his own client.
50.what if client id becomes nil.
51.remember to allow in the website only permitted client ids(i.e the one from the app.)

52.user creates a cart item
then he builds a transaction out of it.
he clicks checkout â€“ we prompt him to set up drive 
he does not set it up : we hold the transaction and cart items on server till tests are completed, after tests are completed, we check for drive otherwise -> just email,and then update the cart items to remove references to the product_details, just keep the broad test classificatio
he sets it up : we hold the transaction and cart items, once test is complete, write them to 
drive, seperate file per test, and sepereate file per transaction, after that remove the broad refs from the cart_items.
if he wants to search by test? -> then show a link in the dropdown, saying my diabetes test results.
if he wants to search by transaction -> this can be done, we can store transaction names
otherwise, we will have to search the drive remote.
consider adding timer to short_poll redis query endpoints, though not needed in otp.


CART ENDPOINTS:
##every user has a cart already built in.
##do we need a seperate cart model?
##no just create a cart_controller with these endpoints, and have 
##a array for product ids, so what i will need is a product model that has a method that serializes and deserializes and finds it on needing it.



THINGS TO BE DONE:

1. add i18n translations for marathi, hindi.
2. validation for email, is returning cant be blank for additional login param in scenario of signing up for admins with a mobile number instead of an email.
3. on signing up with a mobile, shows "your email is pending confirmation on the edit.html.erb page ->should not show this."
4. otp job, require path is hardcoded at top of file, and also in payment_controller_concern.
4b. add secure compare of the auth token in the authenticate_scope method overriden in devise in registrations controller.
5. receipt
6. payment receipient resolver in case of salaries -> hooked into notifications
7. refund 
8. cash on delivery
9. order acceptance post payment resolver - order status, eta
10. payment acknowledgement in case of any payment 
11. on removing a test from the cart, refund should get triggered, only if it is past the cancellation point.
12. specs
13. what happens to cart items after they are added to a cart? should they still be seen , no, -> that query has to be modified.
14. deep linking + test android
15. email and mobile webhooks and notification retry
16. verify payment test.
17. endpoint to return custom jwt token for firebase sign in
18. image/video upload using firebase cloud storage.
19. create a pathofast app implementing the auth engine
20. geo location api
21. custom user and test creation -> admin ui, and shopping cart for admin
22. write test suite for shopping module
23. after this there will all the stuff to create -> user , collection agent interaction, test updates.


---> 
while running shopping tests : notify has to be false, investigate why getting some weird error inside the notification lib file.

while running authentication tests : the notify has to be set to true, also there is the issue of the queue adapter, and stub sms otp calls as well as recaptcha and other configuration options.

plan would be as follows:

1. all tests should pass under the same settings.
2. set up elasticbeanstalk and mongolab
3. add the gem -> follow instructions for queue
4. start with one aspect at a time.


-->
CARD NUMBER
5123456789012346
CVV:
123
EXPIRY:
MAY 2017




- corporate payments
- gift cards
- pay for friend
- pay first, add/create cart later.
