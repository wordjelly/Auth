<%= render :partial => "auth/modals/resource_errors.js.erb", locals: {resource: resource} %>
<% if resource.errors.size == 0 %>
$("#login_content").html("<%= escape_javascript(render partial: Auth.configuration.auth_resources[resource.class.to_s.capitalize][:additional_login_param_verification_result_partial]) %>");

var verified = "<%= resource.additional_login_param_confirmed? %>";

(function poll(counter){
   setTimeout(function(){
      $.ajax({ 
      	beforeSend:function(){
      		//check if verified is true?
      		
      		
      	},
      	data: {"<%= resource.class.name.downcase.underscore.to_s %>" : {additional_login_param : "<%= resource.additional_login_param.to_s %>", otp: "<%= otp %>"}, intent: "<%= (defined?(intent) != nil) ? intent : "" %>"},
      	url: "<%= Auth.configuration.mount_path %>/<%= resource.class.name.downcase.pluralize.to_s %>/otp_verification_result",
      	error: function(){
      		// clear the verify otp result message.
      		$("#verify_otp_result").html("");
      		//errors are not handled here, because spinner.js
      		//catches any non 200/201 status and interprets it as an error
      		//thereafter directly show_error_modal is called.
      		//i could have written logic specific for otp_verification_result, by checking if it is there in the request_url, but did not do so, because otp is not always going to be in the engine, so otp should not be hardcoded anywhere.
      		//the error lands up being shown inside show_error_modal, by means of json parsing the incoming string, and showing json[:errors] as the error message.
      	}, 
      	success: function(data){
	        if(counter == null){
	        	counter = 0;
	        }
	        counter++;
	        	if(data["verified"] == true){

	        		// in case of unlock or forgot password.
	        		if(data["intent_verification_message"] != null){
	        			$("#verify_otp_result").html(data["intent_verification_message"]);
	        		}
	        		// in case of normal sign up procedure.
	        		else{
	        			$("#verify_otp_result").html("Your account was successfully verified. Sign In to continue");
	        		}
	        		/***
	        		hide the additional login param block if its additional_login_param value is the same as whatever is this resource's.
	        		***/
	        		var confirmed_additional_login_param = "<%= resource.additional_login_param %>";
	        		if(confirmed_additional_login_param == $("#additional_login_param_resend_block").attr("data-additional-login-param")){
	        			$("#additional_login_param_resend_block").hide();
	        		}
	        		
	        	}
		        else{

			        if(counter < 10){
			        	poll(counter);
			   		}
			   		

	   			}
      	},
      	dataType: "json"
      });
  }, 3000);
})();
	
<% end %>
